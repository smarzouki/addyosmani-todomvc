<?xml version="1.0"?>
<ui:View xmlns="http://www.w3.org/1999/xhtml" xmlns:js="js.core" xmlns:ui="js.ui">
    <js:Imports>
        js.core.Content;
        js.ui.Button;
    </js:Imports>
    <js:Script type="text/javascript">
        <![CDATA[
        (function (Content, Button) {
            return {
                defaults:{
                    tagName:'div',
                    'class':'btn-group',
                    'menuClassName':"dropdown-menu",
                    menuVisible:false
                },
                $instances:[],

                addChild:function (child) {
                    if (child instanceof Button) {
                        this._collectButton(child);
                    }
                    this.callBase();
                },
                _collectButton:function (child) {
                    this.$button = child;
                    this.$toggleButton = child;

                },
                _renderType:function (type) {
                    this.$button.set({type:type});
                },
                _renderIconClass:function (iconClass) {
                    this.$button.set({iconClass:iconClass});
                },
                _renderLabel:function (label) {
                    this.$button.set({label:label});
                },
                _renderMenuVisible:function (visible) {
                    if (visible === true) {
                        for (var i = 0; i < this.$instances.length; i++) {
                            if (this.$instances[i] != this) {
                                this.$instances[i].set({menuVisible:false});
                            }
                        }
                        this.addClass('open');
                    } else {
                        this.removeClass('open');
                    }

                },
                _bindDomEvents:function (el) {
                    if (!rAppid._.contains(this.$instances, this)) {
                        this.$instances.push(this);
                    }
                    var self = this;

                    document.addEventListener('click', function (e) {
                        self.set({menuVisible:false});
                    });

                    this.$toggleButton.$el.addEventListener('click', function (e) {
                        e.stopPropagation();
                        e.preventDefault();
                        self.set({menuVisible:!self.$.menuVisible});
                    });

                    this.$button.addEventListener('click', function (e) {
                        self.trigger('onclick', e, self);
                    });
                }
            }
        })
        ]]>
    </js:Script>
    <js:Template name="layout">
        <ui:Button class="dropdown-toggle">
            <js:Template name="layout">
                <ui:PlaceHolder name="icon"/>{label}<span class="caret"/>
            </js:Template>
        </ui:Button>
        <ui:ContentPlaceHolder tagName="div" name="menu" class="{menuClassName}"/>
    </js:Template>

</ui:View>